<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Cloudflare on lastfantasy的博客</title>
        <link>https://blog.lastfantasy.top/tags/cloudflare/</link>
        <description>Recent content in Cloudflare on lastfantasy的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>liunianmolian@163.com</copyright>
        <lastBuildDate>Sun, 15 Dec 2024 17:44:59 +0800</lastBuildDate><atom:link href="https://blog.lastfantasy.top/tags/cloudflare/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Cloudflare相关部署配置</title>
        <link>https://blog.lastfantasy.top/p/cloudflare%E7%9B%B8%E5%85%B3%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Sat, 30 Nov 2024 18:32:30 +0800</pubDate>
        
        <guid>https://blog.lastfantasy.top/p/cloudflare%E7%9B%B8%E5%85%B3%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;h2 id=&#34;cloudflare-worker搭配meting-api配置&#34;&gt;cloudflare worker搭配meting-api配置
&lt;/h2&gt;&lt;p&gt;网上能搜到的搭建教程大多都是github项目上自带的说明，最新的版本说明中只有docker、deno、本地node、vercel以及反向代理等。&lt;/p&gt;
&lt;p&gt;具体原文如下：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/xizeyoupan/Meting-API&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;xizeyoupan/Meting-API: 🐳 Meting API 的容器化与部署&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（本地尝试多种方法部署，只有vercel以及本地node node.js命令可以成功，node命令使用时不能&lt;code&gt;CTRL+C&lt;/code&gt;不然就会退出）&lt;/p&gt;
&lt;h3 id=&#34;本地尝试以及cloudflare-pages搭建方案&#34;&gt;本地尝试以及cloudflare pages搭建方案
&lt;/h3&gt;&lt;p&gt;本地尝试如下步骤手动部署，发现在执行第二步时会报错&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm i
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run build:all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;报错如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[30060:1130/185937.420:ERROR:node_bindings.cc(378)] Most NODE_OPTIONs are not supported in packaged apps. See documentation for more details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过百度发现目前并没有好的解决方案。&lt;/p&gt;
&lt;p&gt;对package.json研究了下，发现实际“build:all”对应“node esbuild.config.js”命令，我们转而直接使用对应指令，发现就可以直接编译过了。&lt;/p&gt;
&lt;p&gt;编译生成的部分在对应esbuild.config.js有描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;outfile: &amp;lsquo;./dist/cloudflare-workers.js&amp;rsquo;&lt;/p&gt;
&lt;p&gt;outfile: &amp;lsquo;./dist/cloudflare-workers-min.js&amp;rsquo;,&lt;/p&gt;
&lt;p&gt;outfile: &amp;lsquo;./dist/deno.js&amp;rsquo;,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说实际生成的是dist目录下的三个文件，本地使用node xxx.js（xxx为对应上述js文件），可以实现对应功能，本地在对应&lt;code&gt;PORT&lt;/code&gt;链接中可以直接访问到对应网站且test成功，但实际单独部署到cloudflare上是失败的（cloudflare最初是打算部署到pages里面然后结合github实现自动部署，不过实际上不论采用哪种命令都无法正常部署成功，该node命令一旦主动停止，服务也就自己停了，而自动部署对应的就是正常退出后实际部署内容可以正常使用，因此pages不太符合当前的要求）&lt;/p&gt;
&lt;h3 id=&#34;cloudflare-worker方案探索&#34;&gt;cloudflare worker方案探索
&lt;/h3&gt;&lt;p&gt;在上述最新的部署说明中没有cloudflare相关的描述，但经过不懈探索，在另一个github上看到有历史版本对于cloudflare相关部署描述（具体链接如下）&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/cky008/Meting-API&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cky008/Meting-API: 🐳 Meting API 的容器化与部署&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上述部署描述中有“Cloudflare Workers”相关描述，如果不仔细看的话很容易忽略，因为实际上相关内容被折叠了，打开之后会看到如下描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于cf会自动去除x-real-ip以及在headers中加shit，网易云可能会失效。使用网易云的同学请尝试其他部署方式。&lt;/p&gt;
&lt;p&gt;在全球拥有数据中心，提供的域名被阻断，使用自有域名后速度很快。冷启动速度很快。&lt;/p&gt;
&lt;p&gt;fork本项目，依次点击actions/publish/run workflow。保持默认即可。待CI构建结束后下载cloudflare-workers.js并解压。在Workers创建一个Service，点右上角Quick edit。把cloudflare-workers.js的内容复制进去deploy即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;前面一堆描述，应该就是后续版本删掉“Cloudflare Workers”方案的原因，但是为了刚开始学习部署，肯定要自己先尝试一下顺便学习一下worker怎么用，所以直接开整。&lt;/p&gt;
&lt;p&gt;方法可以参考上面这种，不过既然本地之前已经生成了对应文件，直接copy过来就可以了。&lt;/p&gt;
&lt;p&gt;不过，按照上述流程操作完之后直接访问依旧是访问不了，因此我这边是反复删除和创建多次尝试，依旧不行。奇怪的是等了一段时间，我把worker自定义域配置了一下，通过自定义域居然就能访问了。&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.lastfantasy.top/p/cloudflare%E7%9B%B8%E5%85%B3%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/meting-api.png&#34;
	width=&#34;670&#34;
	height=&#34;437&#34;
	srcset=&#34;https://blog.lastfantasy.top/p/cloudflare%E7%9B%B8%E5%85%B3%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/meting-api_hu2679701382117244862.png 480w, https://blog.lastfantasy.top/p/cloudflare%E7%9B%B8%E5%85%B3%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/meting-api_hu4374303704572110211.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;meting-api&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;367px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;相关test也是没有问题的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.lastfantasy.top/p/cloudflare%E7%9B%B8%E5%85%B3%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/meting-api-test.png&#34;
	width=&#34;1251&#34;
	height=&#34;651&#34;
	srcset=&#34;https://blog.lastfantasy.top/p/cloudflare%E7%9B%B8%E5%85%B3%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/meting-api-test_hu7066125982939677387.png 480w, https://blog.lastfantasy.top/p/cloudflare%E7%9B%B8%E5%85%B3%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/meting-api-test_hu15829411023214066252.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;meting-api-test&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;461px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cloudflare相关配置&#34;&gt;cloudflare相关配置
&lt;/h2&gt;&lt;h3 id=&#34;dns解析修改&#34;&gt;DNS解析修改
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/dreamingsleeping/article/details/139745997&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;详细图文手把手教你阿里云注册域名如何托管到CloudFlare DNS服务_阿里云域名转移到cloud-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;cloudflare-设置域名301转发重定向&#34;&gt;cloudflare 设置域名301转发重定向
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/GeorgeSteven/article/details/127151470&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare设置301重定向，附常见问题和解决方法_dns cname的作用 301重定向-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/495264377&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用 Cloudflare 进行域名跳转(重定向) - 知乎&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cloudflare-workers优秀项目收集&#34;&gt;Cloudflare Workers优秀项目收集
&lt;/h2&gt;&lt;p&gt;这里直接放上大佬的整理链接&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.igdux.com/workers?locale=zh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare Workers优秀项目收集（持续更新） - iGdux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前个人在尝试下面的东西，不过还没成功，后续有进展再更新&lt;/p&gt;
&lt;h3 id=&#34;使用-cloudflare-workers-自建节点科学上网&#34;&gt;使用 Cloudflare Workers 自建节点科学上网
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://voxsay.com/posts/using-cloudflare-workers-build-proxy-for-internet-access/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用 Cloudflare Workers 自建节点科学上网 | 言外之音&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;自定义导航&#34;&gt;自定义导航
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/sleepwood/CF-Worker-Dir?tab=readme-ov-file&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;sleepwood/CF-Worker-Dir: A web directories base on Cloudflare worker.&lt;/a&gt;
（其实已经通过cf worker搞好了，只不过一开始部署需要等好一段时间才能访问网站）&lt;/p&gt;
&lt;h3 id=&#34;网站监测&#34;&gt;网站监测
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/lyc8503/UptimeFlare&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lyc8503/UptimeFlare: ✔ Free and serverless uptime monitoring / status page on Cloudflare Workers, with Geo-specific checks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;个人使用了lyc8503这个博主的uptimeflare结合cloudflare worker及kv进行了自动部署&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
